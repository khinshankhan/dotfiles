#+TITLE: An Emacs Configuration
#+language: en
#+AUTHOR: Khinshan Khan
#+PROPERTY: :header-args :tangle yes :comments both
#+STARTIP: showeverything
#+OPTIONS: num:nil toc:2 tags:nil todo:nil H:3 tex:nil latex:nil
* Base Config

** Personal Variables
My personal information as default values for variables.
#+BEGIN_SRC emacs-lisp
  (setq-default user-full-name "Khinshan Khan"
                user-mail-address "khinshan.khan@gmail.com")
#+END_SRC

** Encoding
Enforce UTF-8 as the default coding system for all files, comint processes and buffers (begone utf 16)
#+BEGIN_SRC emacs-lisp
  (setq-default locale-coding-system 'utf-8)
  (set-terminal-coding-system 'utf-8)
  (set-keyboard-coding-system 'utf-8)
  (set-selection-coding-system 'utf-8)
  (prefer-coding-system 'utf-8)
#+END_SRC

** Backups
Stops the pesky =~= and  ~#~ files. It's more powerful to manually save than autosave as well.
#+BEGIN_SRC emacs-lisp
  (setq-default backup-inhibited t
                auto-save-default nil
                create-lockfiles nil
                make-backup-files nil)
#+END_SRC

** Basic package

#+BEGIN_SRC emacs-lisp
  (require 'package)
  ;;(setq package-enable-at-startup nil)
  (add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/") t)
  (add-to-list 'package-archives '("melpa-stable" . "http://stable.melpa.org/packages/") t)
  (add-to-list 'package-archives '("org" . "https://orgmode.org/elpa/") t)
  (package-initialize)

  ;; Bootstrap use-package
  (unless (package-installed-p 'use-package)
    (package-refresh-contents)
    (package-install 'use-package))

  (eval-when-compile
    (require 'use-package))

  (use-package use-package
    :config
    (setq-default use-package-always-defer nil
                  use-package-always-ensure t
                  use-package-always-demand t))

  (setq-default byte-compile-warnings nil)

  ;; keyword, allows you to ensure system binaries exist alongside your package declarations
  ;; https://github.com/jwiegley/use-package#use-package-ensure-system-package
  (use-package use-package-ensure-system-package)

  ;; lets you try packages before installing them
  (use-package try)
#+END_SRC
