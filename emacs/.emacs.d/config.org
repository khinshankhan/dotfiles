#+TITLE: An Emacs Configuration
#+AUTHOR: Khinshan Khan
#+PROPERTY: header-args :tangle init.el
#+STARTUP: overview
#+PRIORITIES: A D B

* Preface

  After using emacs for a while (since my first programming class in high school), I decided to create my own
  configuration which I can use on most (if not any) machine. I'm still working on creating checks to ensure smooth
  runs, but Windows has proven to be sightly difficult with the package manager.

  For more information about myself, you can visit my website.

  This configuration is based on various emacs tips, users, and emacs itself (yes! You can talk to emacs to learn
  from it. Super classy move with =C-h [key such as f or v]=, since it's self documenting).

  A special thanks to my emacs crew: [[https://github.com/Lgneous]["lgneous"]], [[https://github.com/Dreameh]["dreameh"]], and [[https://github.com/berquist]["speckledlemon"]].

* Pre-Configuration

  This code should be executed first. It's general, but will make the rest of the configuration nicer since it's
  somewhat 'meta'.

** Initialization

   Add [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Lexical-Binding.html][lexical binding]] support globally.

   #+begin_src emacs-lisp
;; -*- lexical-binding: t -*-
   #+end_src

** Garbage Collection

   We don't need [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Garbage-Collection.html][garbage collection]] so low (maybe on a machine from a couple decade ago...) nor does =load-file= need
   the [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Magic-File-Names.html][file name handler]] during start up.

   #+begin_src emacs-lisp
(eval-and-compile
  (defun srs|revert-gc ()
    ;; reset values
    (setq gc-cons-threshold 16777216
          gc-cons-percentage 0.1
          file-name-handler-alist (append last-file-name-handler-alist
		                                  file-name-handler-alist))
    ;; delete any duplicate values
    (cl-delete-duplicates file-name-handler-alist :test 'equal)
    ;; get rid of temporarily variables
    (makunbound 'last-file-name-handler-alist))

  ;; set everything to efficient limits and save values
  (setq gc-cons-threshold most-positive-fixnum
        gc-cons-percentage 0.6
        last-file-name-handler-alist file-name-handler-alist
        file-name-handler-alist nil)

  (add-hook 'after-init-hook 'srs|revert-gc))
   #+end_src

* Package Setup

** Package Stuff

   #+begin_src emacs-lisp
(setq package-enable-at-startup nil
      straight-use-package-by-default t
      straight-recipe-repositories nil)

(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 5))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/raxod502/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))

(setq use-package-always-defer t
      use-package-verbose t)

(straight-use-package 'use-package)
   #+end_src
   #+end_src

** Debug

   Extremely helpful for figuring out what went wrong with configuration file.

   #+begin_quote
   Automatically debug and bisect your init (.emacs) file!
   #+end_quote

   #+begin_src emacs-lisp
(use-package bug-hunter)
   #+end_src

** Wakatime

   Monitor my  coding activity. Remember to set =wakatime-api-key= in =settings.el=.

   #+begin_src emacs-lisp
(use-package wakatime-mode
  :if (and (executable-find "wakatime") (boundp 'wakatime-api-key))
  :custom
  (wakatime-cli-path (executable-find "wakatime"))
  :init
  (global-wakatime-mode))
   #+end_src
